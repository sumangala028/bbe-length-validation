
plugins {
    id 'java'
    id 'application'
}

group 'FileLengthValidator'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

apply plugin: 'application'
mainClassName = 'LengthValidation.LengthValidator'


task cloneRepository(){
    def folder = new File('./build/cloned-repo')
    if( !folder.exists() ) {
        exec {
            if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
                commandLine 'cmd', '/c', './bin/repo_clone.sh'
            } else {
                commandLine 'sh', '-c', 'sh ./bin/repo_clone.sh'
            }
        }
    } else {
        print "Repository folder is alrady exist in /build/cloned-repo. Skipping repository clone."
    }
}

run {
    args "$buildDir" + findProperty('filePath'), findProperty('debug') || false, findProperty('fileExtensions') ? findProperty('fileExtensions') : ""
}

task finalize(type: JavaExec) {
    group = "Execution"
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    args "$buildDir" + findProperty('filePath'), findProperty('debug') || false, findProperty('fileExtensions') ? findProperty('fileExtensions') : ""
}

build.dependsOn cloneRepository
build.finalizedBy(finalize)